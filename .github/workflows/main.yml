name: üöÄ Build and Deploy to ECS from ECR

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2 # ÏÑúÏö∏ Î¶¨Ï†Ñ

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
          build-args: |
            NEXT_PUBLIC_SERVER_API_URL=${{ secrets.SERVER_API_URL }}
            NEXT_PUBLIC_CLIENT_API_URL=${{ secrets.CLIENT_API_URL }}

      - name: Update ECS Task Definition
        id: update-task-def
        run: |
          # ÌòÑÏû¨ ÌÉúÏä§ÌÅ¨ Ï†ïÏùò Í∞ÄÏ†∏Ïò§Í∏∞
          aws ecs describe-task-definition \
            --task-definition myterview-frontend-task \
            --query 'taskDefinition' \
            --output json | jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .placementConstraints, .compatibilities, .registeredAt, .registeredBy)' > task-definition.json

          # ÏÉà Ïù¥ÎØ∏ÏßÄ URIÎ°ú ÏóÖÎç∞Ïù¥Ìä∏
          jq --arg IMAGE_URI "${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest" \
            '.containerDefinitions[0].image = $IMAGE_URI' \
            task-definition.json > updated-task-definition.json

          # ÏÉà ÌÉúÏä§ÌÅ¨ Ï†ïÏùò Îì±Î°ù
          aws ecs register-task-definition \
            --cli-input-json file://updated-task-definition.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text > task-definition-arn.txt

          echo "TASK_DEFINITION_ARN=$(cat task-definition-arn.txt)" >> $GITHUB_OUTPUT

      - name: Update ECS Service
        run: |
          # ECS ÏÑúÎπÑÏä§ ÏóÖÎç∞Ïù¥Ìä∏
          aws ecs update-service \
            --cluster myterview \
            --service myterview-frontend-task-service \
            --task-definition ${{ steps.update-task-def.outputs.TASK_DEFINITION_ARN }} \
            --force-new-deployment

      - name: Wait for Service Deployment
        run: |
          echo "Waiting for service deployment to complete..."
          aws ecs wait services-stable \
            --cluster myterview \
            --services myterview-frontend-task-service

          echo "‚úÖ Deployment completed successfully!"
